package com.d5power.ui
{
	import com.d5power.bitmapui.D5Shape;
	import com.d5power.bitmapui.D5Bitmap;

	import com.d5power.bitmapui.D5Component;
	import flash.display.DisplayObject;
	import flash.display.Sprite;
	import flash.events.MouseEvent;

	import flash.events.Event;
	import com.d5power.ui.Drager;
	import com.d5power.core.WebViewAS;
	import flash.geom.Rectangle;
	import flash.events.TouchEvent;
	import flash.display.Shape;
	import com.d5power.bitmapui.D5Text;

	/**
	 *	This code was auto generated by D5Power BitmapUI Editor
	 */
	public class Home extends Sprite
	{
		protected var _uiSrc:String;
		
		public var _realWidth:uint=720;
		public var _realHeight:uint=600;
		public var _flyX:Number=0;
		public var _flyY:Number=0;
		public var _autoFix:Boolean =false;
		// 编辑器绑定变量定义开始，请勿删除本行注释
		public var mainbg:D5Shape;
		public var top_bar:D5Shape;
		public var bottom_bar:D5Shape;
		public var nagtive_bar:D5Shape;
		public var btn_left:D5Bitmap;
		public var btn_top:D5Bitmap;
 
		// 编辑器绑定变量定义结束，请勿删除本行注释
		
		private var _drager:Drager;
		public var _drag_switch:Boolean = false;
		
		public function Home()
		{
			super();
			visible = false;
			graphics.beginFill(0,0);
			graphics.drawRect(0,0,_realWidth,_realHeight);
			graphics.endFill();
			_uiSrc = "ui/main.xml";
			startLoadUI();
		}
		
		public function dispose(e:MouseEvent=null):void
		{
			stage.removeEventListener(Event.RESIZE,autoFly);
			if(parent) parent.removeChild(this);
			if(_drager) _drager.dispose();
		}
		
		private function startLoadUI():void
		{
			D5Component.getComponentByURL(_uiSrc,this,onLoaded);
		}
		
		/**
		 * onLoaded Function will be called when UI Interface is ready.
		 */
		private function onLoaded():void
		{
			graphics.clear();
			D5ScreenMatcher.getInstance().resize(this,[mainbg],[top_bar,bottom_bar]);
			bottom_bar.y = D5ScreenMatcher.stageHeight - bottom_bar.height;
			mainbg.setSize(mainbg.width,bottom_bar.y);

			if(stage)
			{
				flyPos();
			}else{
				addEventListener(Event.ADDED_TO_STAGE,flyPos);
			}


			var label:D5Text = getChildByName('instance4779') as D5Text;
			label.text = 'LeftPanel';

			label = getChildByName('instance8160') as D5Text;
			label.text = 'RightPanel';

			this.top_bar.add2Me();
			this.nagtive_bar.add2Me();
			
			
		}
		
		private function flyPos(e:Event=null):void
		{
			//if(x!=0 && y!=0) return;
			if(e!=null) removeEventListener(Event.ADDED_TO_STAGE,flyPos);
			if(_flyX!=0 && _flyY!=0) stage.addEventListener(Event.RESIZE,autoFly);
			autoFly();
			visible = true;
			
			var webview:WebViewAS = new WebViewAS(stage);
			var rect:Rectangle = D5ScreenMatcher.getInstance().getWebViewPort(mainbg);
			webview.viewPort = rect;
			webview.load("https://htmlpreview.github.io/?https://github.com/D5CN/ASHttpd/blob/main/www/index.html")

			this.nagtive_bar.y = this.bottom_bar.y;
			this.nagtive_bar.x = Math.ceil((D5ScreenMatcher.stageWidth-nagtive_bar.width)*.5);

			var left_bar:Shape = new Shape();
			left_bar.graphics.beginFill(0xff9900)
			left_bar.graphics.drawRect(0,0,120,mainbg.height)
			this.btn_left.mouseEnabled = true;
			this.btn_top.mouseEnabled = true;
			this.btn_top.addEventListener(MouseEvent.CLICK,function(e:MouseEvent):void{
				if(left_bar.parent) return;
				if(top_bar.parent)
				{
					removeChild(top_bar);
					webview.viewPort = rect;
				}else{
					D5ScreenMatcher.getInstance().popUpWithWebview(webview.webview,top_bar,'T');
					addChild(top_bar)
				}
				
			});
			this.btn_left.addEventListener(MouseEvent.CLICK,function(e:MouseEvent):void{
				if(top_bar.parent) return;
				if(left_bar.parent)
				{
					removeChild(left_bar);
					webview.viewPort = rect;
				}else{
					D5ScreenMatcher.getInstance().popUpWithWebview(webview.webview,left_bar,'L');
					addChild(left_bar)
				}
			})
		}
		private function autoFix():void
		{
			var obj:DisplayObject;
			for(var i:uint = 0,j:uint=numChildren;i<j;i++)
			{
				obj = getChildAt(i);
				if(obj is D5Component) 
				{
					var _relx:String = (obj as D5Component).relx;
					var _rely:String = (obj as D5Component).rely;
					if(_relx == ''&& _rely == '') break;
					if(obj.parent)
					{
						if(_autoFix)
						{
							obj.x = Math.floor(parseFloat(_relx)*obj.parent.stage.width);
							obj.y = Math.floor(parseFloat(_rely)*obj.parent.stage.height);
						}else
						{
							obj.x = Math.floor(parseFloat(_relx)*obj.parent.width);
							obj.y = Math.floor(parseFloat(_rely)*obj.parent.height);
						}
					}
				}
			}
		}

		private function autoFly(e:Event=null):void
		{
			x = _flyX==1 ? (stage.stageWidth-_realWidth) : (_flyX==.5 ? (stage.stageWidth-_realWidth) >> 1 : int(stage.stageWidth*_flyX));
			y = _flyY==1 ? (stage.stageHeight-_realHeight) : (_flyY==.5 ? (stage.stageHeight-_realHeight) >> 1 : int(stage.stageHeight*_flyY));
			
			autoFix();
		}
		

		private function buildDrager():void
		{
			if(_drager==null)
			{
				_drager = new Drager(this);
			}else{
				_drager.init(this);
			}
		}
		

		override public function get width():Number
		{
			return _realWidth;
		}
		
		override public function get height():Number
		{
			return _realHeight;
		}
		

	}
}